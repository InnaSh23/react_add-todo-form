{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","TodoInfo","value","label","placeholder","onChange","hasError","className","htmlFor","type","event","target","UserInfo","users","disabled","map","user","TodoList","todos","todo","find","u","href","App","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","todosFromServer","addTodos","setAddTodos","action","method","onSubmit","preventDefault","trim","newTodo","Math","max","prevTodos","setter","handleTitleChange","usersFromServer","handleUserIdChange","ReactDOM","render","document","getElementById"],"mappings":"sMAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4BC3DI,GACb,CACEH,GAAI,EACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,GACJI,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,EACJI,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,OCPCC,EAA4B,SAAC,GAMnC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,MAII,IAHJC,mBAGI,MAHU,gBAGV,MAFJC,gBAEI,MAFO,aAEP,MADJC,gBACI,SAKJ,OACE,sBACEC,UAAU,GADZ,UAGE,uBACEA,UAAU,QACVC,QAAQ,WAFV,SAIGL,IAGH,uBACET,GAAG,WACHe,KAAK,OACL,UAAQ,aACRP,MAAOA,EACPE,YAAaA,EACbC,SArBsB,SAACK,GAC3BL,EAASK,EAAMC,OAAOT,UAuBnBI,GACC,sBAAMC,UAAU,QAAhB,sCChCKK,EAA4B,SAAC,GAMnC,IALLV,EAKI,EALJA,MACAC,EAII,EAJJA,MACAU,EAGI,EAHJA,MAGI,IAFJR,gBAEI,MAFO,aAEP,MADJC,gBACI,SAKJ,OACE,sBAAKC,UAAU,QAAf,UACE,uBACEA,UAAU,QACVC,QAAQ,UAFV,SAIGL,IAGH,yBACET,GAAG,UACH,UAAQ,aACRQ,MAAOA,EACPG,SAjBqB,SAACK,GAC1BL,GAAUK,EAAMC,OAAOT,QAYrB,UAME,wBAAQA,MAAM,IAAIY,UAAQ,EAA1B,2BAECD,EAAME,KAAI,SAAAC,GACT,OACE,wBACEd,MAAOc,EAAKtB,GADd,SAIGsB,EAAKrB,MAFDqB,EAAKtB,UAQjBY,GACC,sBAAMC,UAAU,QAAhB,sCC3CKU,EAA4B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,MACjD,OACE,yBAASN,UAAU,WAAnB,SACGW,EAAMH,KAAI,SAACI,GACV,IAAMH,EAAOH,EAAMO,MAAK,SAACC,GAAD,OAAOA,EAAE3B,KAAOyB,EAAKnB,UAE7C,OAAIgB,EAEA,0BAEET,UAAS,mBAAcY,EAAKpB,UAAY,sBAAwB,IAChE,UAASoB,EAAKzB,GAHhB,UAKE,oBAAIa,UAAU,kBAAd,SACGY,EAAKrB,QAER,mBAAGS,UAAU,WAAWe,KAAI,iBAAYN,EAAKnB,OAA7C,SACGmB,EAAKrB,SARHwB,EAAKzB,IAcT,WCvBF6B,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAO1B,EAAP,KAAc2B,EAAd,KACA,EAA0CD,oBAAS,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KAEA,EAA4BH,mBAAS,GAArC,mBAAOxB,EAAP,KAAe4B,EAAf,KACA,EAA4CJ,oBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KAEA,EAAgCN,mBAASO,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KA0CA,OACE,sBAAK1B,UAAU,MAAf,UACE,+CAEA,uBACE2B,OAAO,aACPC,OAAO,OACPC,SA/Be,SAAC1B,GAMpB,GALAA,EAAM2B,iBAENV,GAAkB7B,EAAMwC,QACxBR,GAAmB9B,GAEdF,EAAMwC,QAAWtC,EAAtB,CAIA,IAEMuC,EAAU,CACd7C,GAHY8C,KAAKC,IAAL,MAAAD,KAAI,YAAQR,EAASjB,KAAI,SAAAI,GAAI,OAAIA,EAAKzB,OAAlC,QAAuC,KAAK,EAI5DI,QACAC,WAAW,EACXC,UAGFiC,GAAY,SAACS,GAAD,4BAAmBA,GAAnB,CAA8BH,OAC1Cd,EAAS,IACTG,EAAU,KAOR,UAKE,cAAC,EAAD,CACE1B,MAAOJ,EACPK,MAAM,UACNE,SAAU,SAACH,GAAD,OApDQ,SACxByC,EACAzC,GAEAyC,EAAOzC,GACPyB,GAAiB,GA+CUiB,CAAkBnB,EAAUvB,IACjDI,SAAUoB,IAGZ,cAAC,EAAD,CACExB,MAAOF,EACPG,MAAM,SACNU,MAAOgC,EACPxC,SAAU,SAACH,GAAD,OApDS,SACzByC,EACAzC,GAEAyC,EAAOzC,GACP4B,GAAkB,GA+CSgB,CAAmBlB,EAAW1B,IACnDI,SAAUuB,IAGZ,wBAAQpB,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CACES,MAAOc,EACPnB,MAAOgC,QCrFfE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.771ad9e2.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\n\ntype Props = {\n  value: string,\n  label: string,\n  placeholder?: string,\n  onChange?: (newValue: string) => void,\n  hasError?: boolean;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  value,\n  label,\n  placeholder = 'Enter a title',\n  onChange = () => { },\n  hasError = false,\n}) => {\n  const handleTouchedChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.value);\n  };\n\n  return (\n    <div\n      className=\"\"\n    >\n      <label\n        className=\"label\"\n        htmlFor=\"title-id\"\n      >\n        {label}\n      </label>\n\n      <input\n        id=\"title-id\"\n        type=\"text\"\n        data-cy=\"titleInput\"\n        value={value}\n        placeholder={placeholder}\n        onChange={handleTouchedChange}\n      />\n\n      {hasError && (\n        <span className=\"error\">\n          Please enter a title\n        </span>\n      )}\n    </div>\n  );\n};\n","import { User } from '../../types/User';\n\ntype Props = {\n  value: number,\n  label: string,\n  users: User[],\n  onChange?: (newValue: number) => void,\n  hasError?: boolean,\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  value,\n  label,\n  users,\n  onChange = () => {},\n  hasError = false,\n}) => {\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onChange(+event.target.value);\n  };\n\n  return (\n    <div className=\"field\">\n      <label\n        className=\"label\"\n        htmlFor=\"user-id\"\n      >\n        {label}\n      </label>\n\n      <select\n        id=\"user-id\"\n        data-cy=\"userSelect\"\n        value={value}\n        onChange={handleUserIdChange}\n      >\n        <option value=\"0\" disabled>Choose a user</option>\n\n        {users.map(user => {\n          return (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          );\n        })}\n      </select>\n\n      {hasError && (\n        <span className=\"error\">\n          Please choose a user\n        </span>\n      )}\n    </div>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todos: Todo[];\n  users: User[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, users }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        const user = users.find((u) => u.id === todo.userId);\n\n        if (user) {\n          return (\n            <article\n              key={todo.id}\n              className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n              data-id={todo.id}\n            >\n              <h2 className=\"TodoInfo__title\">\n                {todo.title}\n              </h2>\n              <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </article>\n          );\n        }\n\n        return null;\n      })}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoInfo } from './components/TodoInfo';\nimport { UserInfo } from './components/UserInfo';\nimport { TodoList } from './components/TodoList';\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const [addTodos, setAddTodos] = useState(todosFromServer);\n\n  const handleTitleChange = (\n    setter: React.Dispatch<React.SetStateAction<string>>,\n    value: string,\n  ) => {\n    setter(value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (\n    setter: React.Dispatch<React.SetStateAction<number>>,\n    value: number,\n  ) => {\n    setter(value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserIdError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    const newId = Math.max(...addTodos.map(todo => todo.id), 0) + 1;\n\n    const newTodo = {\n      id: newId,\n      title,\n      completed: false,\n      userId,\n    };\n\n    setAddTodos((prevTodos) => [...prevTodos, newTodo]);\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <TodoInfo\n          value={title}\n          label=\"Title: \"\n          onChange={(value) => handleTitleChange(setTitle, value)}\n          hasError={hasTitleError}\n        />\n\n        <UserInfo\n          value={userId}\n          label=\"User: \"\n          users={usersFromServer}\n          onChange={(value) => handleUserIdChange(setUserId, value)}\n          hasError={hasUserIdError}\n        />\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={addTodos}\n        users={usersFromServer}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}